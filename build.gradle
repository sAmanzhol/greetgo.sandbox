buildscript {
  def ggRepo = System.getenv('GG_REPO')

  ext {
    springBootVersion = '2.1.0.RELEASE'
  }
  repositories {
    mavenLocal()
    if (ggRepo?.trim()) maven { url ggRepo.trim() }
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

def ggRepo = System.getenv('GG_REPO')

allprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'idea'

  version = rootProject.file("version.txt").text.trim()

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  group = "kz.greetgo.sandbox"

  buildscript {
    repositories {
      mavenLocal()
      mavenCentral()
    }
  }

  repositories {
    mavenLocal()
    if (ggRepo?.trim()) maven { url ggRepo.trim() }
    mavenCentral()
  }
}

subprojects {
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management'
  
  dependencies {
    ext.testNgVersion = '6.14.3'
    ext.greetgoConfVersion = "1.0.2"
    ext.greetgoDbVersion = "2.3.5";

    testCompile "org.testng:testng:$testNgVersion"
    compile 'org.easytesting:fest-assert-core:2.0M10'
  }

  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
  }

  test.useTestNG()

  idea.module.downloadSources = true
  idea.module.downloadJavadoc = true
  idea.module.inheritOutputDirs = false
  idea.module.outputDir = file("$buildDir/classes/main/")
  idea.module.testOutputDir = file("$buildDir/classes/test/")

  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
  [compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

  sourceSets.main.java.srcDirs = ["src"]
  sourceSets.test.java.srcDirs = ["test_src"]
  sourceSets.main.resources.srcDirs = ["src_resources"]
  sourceSets.test.resources.srcDirs = ["test_resources"]

  sourceSets.main.resources {
    srcDirs += sourceSets.main.java.srcDirs
    exclude '**/*.java'
  }
  sourceSets.test.resources {
    srcDirs += sourceSets.test.java.srcDirs
    exclude '**/*.java'
  }

  jar {
    enabled = true
    manifest {
      attributes 'Specification-Title': rootProject.name
      attributes 'Specification-Version': version
      attributes 'Specification-Vendor': "greetgo!"
      attributes 'Created-By': System.getProperty("user.name")
      attributes 'Created-At': new Date().format("yyyy-MM-dd/HH:mm:ss")
    }
  }
}
